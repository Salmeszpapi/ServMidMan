@model ChatWithPerson
@{
    int currentUser = 0;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>chat app - Bootdey.com</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">

</head>
<body>
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card chat-app">
                    <div id="plist" class="people-list">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-search"></i></span>
                            </div>
                            <input type="text" class="form-control" placeholder="Search...">
                        </div>
                        <div id="searchResults">
                            <!-- Search results will be displayed here -->
                        </div>
                        <ul class="list-unstyled chat-list mt-2 mb-0">
                            @foreach(var user in Model.AllUsers)
                            {
                                <li class="clearfix" onclick="setPartner('@user.Name')">
                                    <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="avatar">
                                    <div class="about">
                                        <div class="name">@user.Name</div>
                                        <div class="status">
                                            @{
                                                TimeSpan timeDifference = DateTime.Now - user.LastLogin;
                                                int minutesDifference = (int)timeDifference.TotalMinutes;
                                            }
                                            @if (minutesDifference < 15)
                                            {
                                                <text>Online</text>
                                                <i class="fa fa-circle online"></i>
                                            }else{
                                                <text>Offline</text>
                                                <i class="fa fa-circle offline"></i>
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="chat">
                        <div class="chat-header clearfix">

                            <div class="row">
                                <div class="col-lg-6">
                                    <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
                                        <img src="https://bootdey.com/img/Content/avatar/avatar2.png" alt="avatar">
                                    </a>
                                    <div class="chat-about">
                                        @if (Model.Partner != null && !string.IsNullOrEmpty(Model.Partner.Name))
                                        {
                                            <h6 id="ChatWithCurrentUser" class="m-b-0">@Model.Partner.Name</h6>
                                            <small>Last seen: 2 hours ago</small>
                                        }
                                        else
                                        {
                                            <h6 id="ChatWithCurrentUser" class="m-b-0">Unknown</h6>
                                            <small>No information available</small>
                                        }
                                    </div>
                                </div>
                                <div class="col-lg-6 hidden-sm text-right">
                                    <a href="javascript:void(0);" class="btn btn-outline-secondary"><i class="fa fa-camera"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-primary"><i class="fa fa-image"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-info"><i class="fa fa-cogs"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-warning"><i class="fa fa-question"></i></a>
                                </div>
                            </div>
                        </div>

                        <div class="chat-history">
                            @if (!(bool)ViewData["NoExistingMessages"])
                            {
                            <ul class="m-b-0">
                                @foreach (var messages in Model.Messages)
                                {
                                    if (messages.SenderId == (int)ViewData["MyId"])
                                    {
                                        <li class="clearfix">
                                            <div class="message-data">
                                                <span class="message-data-time">@messages.SendTime.ToString("hh:mm:tt")</span>
                                                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">
                                            </div>
                                            <div class="message my-message">@messages.Massege </div>
                                        </li>

                                    }else
                                    {
                                        <li class="clearfix">
                                            <div class="message-data text-right">
                                                <span class="message-data-time">10:10 AM, Today</span>
                                                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">
                                            </div>
                                            <div class="message other-message float-right">@messages.Massege </div>
                                        </li>
                                    }
                                }
                            </ul>
                            }
                        </div>
                        <div class="chat-message clearfix">
                            <div class="input-group mb-0">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-send"></i></span>
                                </div>
                                <input id="messageInput" type="text" class="form-control" placeholder="Enter text here...">
                                <div class="input-group-append">
                                    <button id="sendMessageBtn" class="btn btn-primary">Send</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            $('#sendMessageBtn').click(function () {
                var message = $('#messageInput').val();
                var receiverName = $('#ChatWithCurrentUser').text(); // Use .text() to get the text content
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SendMessage", "Chat")',
                    data: {
                        message: message,
                        receiverName: receiverName
                    },
                    success: function (response) {
                        // Construct the HTML for the new message
                        var newMessage = '<li class="clearfix"><div class="message-data"><span class="message-data-time">' + response.time + '</span></div><div class="message my-message">' + response.message + '</div></li>';
                        // Append the new message to the chat history
                        $('.chat-history ul').append(newMessage);
                        // Clear the message input
                        $('#messageInput').val('');
                    },
                    error: function () {
                        alert('Error sending message.');
                    }
                });
            });
        });
        $('#messageInput').keypress(function (event) {
            if (event.keyCode === 13) { // Check if the Enter key is pressed
                event.preventDefault(); // Prevent the default behavior of the Enter key (submitting the form)
                $('#sendMessageBtn').click(); // Trigger the click event of the send button
            }
        });
        function setPartner(partnerName) {
            // Set the partner name and ID in the model
            document.getElementById('ChatWithCurrentUser').innerText = partnerName;

            // Retrieve conversation history for the selected partner
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetConversation", "Chat")',
                data: { partnerName: partnerName },
                success: function (response) {
                    // Clear previous chat history
                    $('.chat-history ul').empty();

                    // Populate chat history with retrieved messages
                    response.forEach(function (message) {
                        var messageHtml = '<li class="clearfix">';
                        messageHtml += '<div class="message-data">';

                        // Check if the message is from the sender (current user)
                        if (message.sender == @((int)ViewData["MyId"])) {
                            messageHtml += '<div class="message-data">';
                            messageHtml += '<span class="message-data-time">' + message.sendTime + '</span>';
                            messageHtml += '<img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">'; // Add this line to include the avatar
                            messageHtml += '</div>';
                            messageHtml += '<div class="message my-message">' + message.message + '</div>';
                        } else {
                            messageHtml += '<div class="message-data text-right">';
                            messageHtml += '<span class="message-data-time">' + message.sendTime + '</span>';
                            messageHtml += '<img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">'; // Add this line to include the avatar
                            messageHtml += '</div>';
                            messageHtml += '<div class="message other-message float-right">' + message.message + '</div>';
                        }

                        // Append the time to the message container


                        messageHtml += '</li>';
                        $('.chat-history ul').append(messageHtml);
                    });
                },
                error: function () {
                    alert('Error retrieving conversation.');
                }
            });
        }
    </script>
    <style>
        body {
            background-color: #f4f7f6;
            margin-top: 20px;
        }

        .card {
            background: #fff;
            transition: .5s;
            border: 0;
            margin-bottom: 30px;
            border-radius: .55rem;
            position: relative;
            width: 100%;
            box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
        }

        .chat-app .people-list {
            width: 280px;
            position: absolute;
            left: 0;
            top: 0;
            padding: 20px;
            z-index: 7
        }

        .chat-app .chat {
            margin-left: 280px;
            border-left: 1px solid #eaeaea
        }

        .people-list {
            -moz-transition: .5s;
            -o-transition: .5s;
            -webkit-transition: .5s;
            transition: .5s
        }

            .people-list .chat-list li {
                padding: 10px 15px;
                list-style: none;
                border-radius: 3px
            }

                .people-list .chat-list li:hover {
                    background: #efefef;
                    cursor: pointer
                }

                .people-list .chat-list li.active {
                    background: #efefef
                }

                .people-list .chat-list li .name {
                    font-size: 15px;
                    overflow: hidden;
                    text-overflow: ellipsis; /* Adds an ellipsis (...) to indicate text overflow */
                    white-space: nowrap; /* Prevents the text from wrapping */
                    max-width: 150px; /* Adjust the maximum width as needed */
                }

            .people-list .chat-list img {
                width: 45px;
                border-radius: 50%
            }

            .people-list img {
                float: left;
                border-radius: 50%
            }

            .people-list .about {
                float: left;
                padding-left: 8px
            }

            .people-list .status {
                color: #999;
                font-size: 13px
            }

        .chat .chat-header {
            padding: 15px 20px;
            border-bottom: 2px solid #f4f7f6
        }

            .chat .chat-header img {
                float: left;
                border-radius: 40px;
                width: 40px
            }

            .chat .chat-header .chat-about {
                float: left;
                padding-left: 10px
            }

        .chat .chat-history {
            height: 600px; /* Set a fixed height */
            overflow-y: auto; /* Enable vertical scrolling */
            padding: 20px;
            border-bottom: 2px solid #fff;
        }

            .chat .chat-history ul {
                padding: 0
            }

                .chat .chat-history ul li {
                    list-style: none;
                    margin-bottom: 30px
                }

                    .chat .chat-history ul li:last-child {
                        margin-bottom: 0px
                    }

            .chat .chat-history .message-data {
                margin-bottom: 15px
            }

                .chat .chat-history .message-data img {
                    border-radius: 40px;
                    width: 40px
                }

            .chat .chat-history .message-data-time {
                color: #434651;
                padding-left: 6px
            }

            .chat .chat-history .message {
                color: #444;
                padding: 18px 20px;
                line-height: 26px;
                font-size: 16px;
                border-radius: 7px;
                display: inline-block;
                position: relative
            }

                .chat .chat-history .message:after {
                    bottom: 100%;
                    left: 7%;
                    border: solid transparent;
                    content: " ";
                    height: 0;
                    width: 0;
                    position: absolute;
                    pointer-events: none;
                    border-bottom-color: #fff;
                    border-width: 10px;
                    margin-left: -10px
                }

            .chat .chat-history .my-message {
                background: #efefef
            }

                .chat .chat-history .my-message:after {
                    bottom: 100%;
                    left: 30px;
                    border: solid transparent;
                    content: " ";
                    height: 0;
                    width: 0;
                    position: absolute;
                    pointer-events: none;
                    border-bottom-color: #efefef;
                    border-width: 10px;
                    margin-left: -10px
                }

            .chat .chat-history .other-message {
                background: #e8f1f3;
                text-align: right
            }

                .chat .chat-history .other-message:after {
                    border-bottom-color: #e8f1f3;
                    left: 93%
                }

        .chat .chat-message {
            padding: 20px
        }

        .online,
        .offline,
        .me {
            margin-right: 2px;
            font-size: 8px;
            vertical-align: middle
        }

        .online {
            color: #86c541
        }

        .offline {
            color: #e47297
        }

        .me {
            color: #1d8ecd
        }

        .float-right {
            float: right
        }

        .clearfix:after {
            visibility: hidden;
            display: block;
            font-size: 0;
            content: " ";
            clear: both;
            height: 0
        }

        @@media only screen and (max-width: 767px) {
            .chat-app .people-list {
                height: 465px;
                width: 100%;
                overflow-x: auto;
                background: #fff;
                left: -400px;
                display: none
            }

                .chat-app .people-list.open {
                    left: 0
                }

            .chat-app .chat {
                margin: 0
            }

                .chat-app .chat .chat-header {
                    border-radius: 0.55rem 0.55rem 0 0
                }

            .chat-app .chat-history {
                height: 300px;
                overflow-x: auto
            }
        }

        @@media only screen and (min-width: 768px) and (max-width: 992px) {
            .chat-app .chat-list {
                height: 650px;
                overflow-x: auto
            }

            .chat-app .chat-history {
                height: 600px;
                overflow-x: auto
            }
        }

        @@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 1) {
            .chat-app .chat-list {
                height: 480px;
                overflow-x: auto
            }

            .chat-app .chat-history {
                height: calc(100vh - 350px);
                overflow-x: auto
            }
        }

    </style>
</body>
</html>