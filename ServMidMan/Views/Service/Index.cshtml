@model ServMidMan.Models.ServicesOrdered
@using ServMidMan.Helper
<!DOCTYPE html>
<html>
<head>
    <title>Services Ordered</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .service-list {
            list-style-type: none;
            padding: 0;
            background-color: white;
        }

        .service-item {
            margin-bottom: 20px;
            border: 1px solid #ccc;
            padding: 10px;
        }

        .approve-button {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .reject-button {
            background-color: red;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .reject-button:hover {
                background-color: darkred;
            }

        .approve-button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <input type="hidden" id="sendButton" value="Send Message" />
    @* <button class="btn btn-primary" id="ProductUploadedButton">Submit2 form</button> *@
    <input type="hidden" id="ProductUploadedButton" value="Send Message" />
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <h1 class="text-center">Requests</h1>

                @if (ViewBag.Services != null)
                {
                    <div class="alert alert-info" role="alert">
                        <strong>Error:</strong> @ViewBag.Services
                    </div>
                }
                else
                {
                    @if (Model.Services != null && Model.Services.Any())
                    {
                        <div id="receivedServices">
                            <!-- Add this div -->
                            @if (ViewData["typeOfUser"].Equals("Client"))
                            {
                                <h2>Received requests</h2>
                            }
                            else
                            {
                                <h2>Sended requests</h2>
                            }
                            @foreach (var group in Model.Services)
                            {
                                <h3>Service ID: @group.service.Id</h3>
                                <ul class="service-list">
                                    <li class="service-item">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div>Product name: @group.product.Products.Name</div>
                                                <div>User ID: @group.OwnerName </div>
@*                                                 <div>Service ID: @group.service.Id</div>
                                                <div>Product ID: @group.service.ProductId</div> *@
                                                <div>Recived service price: @group.service.Price€</div>
                                                <div>Description: @group.service.Description</div>
                                                <div>Date when finished: @group.service.ApproximetlyFinishDate.ToString("dd.MM.yyyy")</div>
                                                @if (group.service.Approved == ServiceStatus.Approved)
                                                {
                                                    <h1 class="display-4 text-success">Approved !</h1>
                                                }
                                                else
                                                {

                                                    @if (ViewData["typeOfUser"].Equals("Client"))
                                                    {
                                                        <div class="text-center">
                                                            <button class="approve-button" onclick="approveService(@group.service.Id)">Approve</button>
                                                            <button class="reject-button" onclick="rejectService(@group.service.Id)">Reject</button>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="text-center">
                                                            <button class="reject-button" onclick="rejectService(@group.service.Id)">Remove request</button>
                                                        </div>
                                                    }

                                                }
                                                <form method="post" action="/Home/Profile" style="display: inline;">
                                                    <input type="hidden" name="userId" value="@group.service.UserId" />
                                                    <button type="submit" id="VisitProfile" class="btn btn-dark mr-2">Visit profile</button>
                                                </form>

                                            </div>
                                            <div class="col-md-6">
                                                <img class="product-images" src="@group.product.ImagePaths[0]" alt="Product Image" data-toggle="modal" data-target="#imageModal">
                                                @*                                                 @using (Html.BeginForm("UpdateProductStatus", "Service", FormMethod.Post))
                                    {
                                    @Html.DropDownListFor(x => x.Services[0].service.productStatus,
                                    new SelectList(Enum.GetValues(typeof(ProductStatus))),
                                    new { @class = "form-control", onchange = "this.form.submit();" })
                                    } *@
                                                @if (group.service.Approved == ServiceStatus.Approved)
                                                {
                                                    @if (!ViewData["typeOfUser"].Equals("Client"))
                                                    {
                                                        <form id="productStatusForm" action="/Service/UpdateProductStatus" method="post">
                                                            <input type="hidden" name="serviceId" value="@group.service.Id" />
                                                            <select class="form-control" id="productStatus" name="productStatus" onchange="submitForm(@group.service.Id, this.value)">
                                                                <option value="@group.service.productStatus" hidden selected>@group.service.productStatus</option>
                                                                <option value="UnSettled">UnSettled</option>
                                                                <option value="Sended">Sended</option>
                                                                <option value="ArrivedToService">ArrivedToService</option>
                                                                <option value="Repaired">Repaired</option>
                                                                <option value="ReceivedToClient">ReceivedToClient</option>
                                                            </select>
                                                        </form>
                                                    }
                                                    else
                                                    {
                                                        <select class="form-control" id="productStatus" name="productStatus" disabled>
                                                            <option value="@group.service.productStatus" selected>@group.service.productStatus</option>
                                                        </select>
                                                    }
                                                }
  

                                            </div>
                                        </div>
                                    </li>
                                </ul>

                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <input type="hidden" id="sendButton" value="Send Message" />
    @* <button class="btn btn-primary" id="ProductUploadedButton">Submit2 form</button> *@
    <input type="hidden" id="ProductUploadedButton" value="Send Message" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('senderServices').style.display = 'block';
            document.getElementById('receivedServices').style.display = 'none';
        });
        function showReceivedServices() {
            document.getElementById('receivedServices').style.display = 'block';
            document.getElementById('senderServices').style.display = 'none';
        }

        function submitForm(serviceId, selectedValue) {
            fetch('/Service/UpdateProductStatus?productStatus=' + selectedValue + '&serviceId=' + serviceId, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Handle success
                    } else {
                        // Handle error
                    }
                })
                .catch(error => console.error('Error updating product status:', error));
        }

        function showSenderServices() {
            document.getElementById('senderServices').style.display = 'block';
            document.getElementById('receivedServices').style.display = 'none';
        }

        function approveService(serviceId) {
            fetch('/service/approve?serviceId=' + serviceId, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Service approved successfully, you can update the UI as needed
                        location.reload();
                    } else {
                        // Handle error
                    }
                })
                .catch(error => console.error('Error approving service:', error));
        }

        function rejectService(serviceId) {
            fetch('/service/deletev2?serviceId=' + serviceId, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Service approved successfully, you can update the UI as needed
                        location.reload();
                    } else {
                        // Handle error
                    }
                })
                .catch(error => console.error('Error approving service:', error));
        }
    </script>
    <style>
        .product-images {
            max-width: 300px;
            max-height: 400px; /* Set maximum height to 400 pixels */
            margin-bottom: 20px;
        }
    </style>
</body>
</html>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/chat/chat.js"></script>