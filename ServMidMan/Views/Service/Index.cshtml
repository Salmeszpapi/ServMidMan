@model ServMidMan.Models.ServicesOrdered

<!DOCTYPE html>
<html>
<head>
    <title>Services Ordered</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .service-list {
            list-style-type: none;
            padding: 0;
        }

        .service-item {
            margin-bottom: 20px;
            border: 1px solid #ccc;
            padding: 10px;
        }

        .approve-button {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .reject-button {
            background-color: red;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .reject-button:hover {
            background-color: darkred;
        }

            .approve-button:hover {
                background-color: #45a049;
            }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="row">
            <div class="col-md-8 offset-md-3">
                <h1 class="text-center">Requests</h1>

                @if (ViewBag.Services != null)
                {
                    <div class="alert alert-info" role="alert">
                        <strong>Error:</strong> @ViewBag.Services
                    </div>
                }
                else
                {
                    @if (Model.ReceivedServices != null && Model.ReceivedServices.Any())
                    {
                        <div id="receivedServices">
                            <!-- Add this div -->
                            <h2>Received requests</h2>
                            @foreach (var group in Model.ReceivedServices.GroupBy(service => service.ProductId))
                            {
                                <h3>Product ID: @group.Key</h3>
                                <ul class="service-list">
                                    @foreach (var service in group)
                                    {
                                        <li class="service-item">
                                            <div>Service ID: @service.Id</div>
                                            <div>Product ID: @service.ProductId</div>
                                            <div>Price: @service.Price€</div>
                                            <div>Description: @service.Description</div>
                                            <div>Date when finished:  @service.ApproximetlyFinishDate</div>
                                            <!-- Add other properties as needed -->
                                            @if (service.Approved)
                                            {
                                                <h1 class="display-4 text-danger">Approved !</h1>
                                            }
                                            else
                                            {
                                                <button class="approve-button" onclick="approveService(@service.Id)">Approve</button>
                                                <button class="reject-button" onclick="rejectService(@service.Id)">Reject</button>                                                
                                            }
                                        </li>
                                    }
                                </ul>
                            }
                        </div>
                    }

                    @if (Model.SenderServices != null && Model.SenderServices.Any())
                    {
                        <div id="senderServices">
                            <!-- Add this div -->
                            <h2>Sended requests</h2>
                            @foreach (var group in Model.SenderServices.GroupBy(service => service.ProductId))
                            {
                                <h3>Product ID: @group.Key</h3>
                                <ul class="service-list">
                                    @foreach (var service in group)
                                    {
                                        <form action="/Service/Delete" method="get">
                                        <li class="service-item">
                                            <input type="hidden" name="id" value="@service.Id">
                                            <input type="hidden" name="productId" value="@service.ProductId">
                                            <input type="hidden" name="price" value="@service.Price">
                                            <input type="hidden" name="description" value="@service.Description">
                                            <input type="hidden" name="finishDate" value="@service.ApproximetlyFinishDate">

                                            <div>Service ID: @service.Id</div>
                                            <div>Product ID: @service.ProductId</div>
                                            <div>Price: @service.Price€</div>
                                            <div>Description: @service.Description</div>
                                           @*  <div>Date when finished:  @service.ApproximetlyFinishDate</div> *@
                                            <!-- Add other properties as needed -->
                                            <button class="btn btn-danger" type="submit">Delete request</button>
                                        </li>
                                        </form>

                                    }
                                </ul>
                            }
                        </div>
                    }
                }


            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('senderServices').style.display = 'block';
            document.getElementById('receivedServices').style.display = 'none';
        });
        function showReceivedServices() {
            document.getElementById('receivedServices').style.display = 'block';
            document.getElementById('senderServices').style.display = 'none';
        }

        function showSenderServices() {
            document.getElementById('senderServices').style.display = 'block';
            document.getElementById('receivedServices').style.display = 'none';
        }

        function approveService(serviceId) {
            fetch('/service/approve?serviceId=' + serviceId, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Service approved successfully, you can update the UI as needed
                        location.reload();
                    } else {
                        // Handle error
                    }
                })
                .catch(error => console.error('Error approving service:', error));
        }

        function rejectService(serviceId) {
            fetch('/service/deletev2?serviceId=' + serviceId, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        // Service approved successfully, you can update the UI as needed
                        location.reload();
                    } else {
                        // Handle error
                    }
                })
                .catch(error => console.error('Error approving service:', error));
        }
    </script>
</body>
</html>