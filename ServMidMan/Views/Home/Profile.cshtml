@model ProductWithImagesPathAndUserInfo
@{
    bool visitor = false;
    if (ViewData["Visitor"] != null)
    {
        visitor = (bool)ViewData["Visitor"];
    }
}

<div class="container-xl px-4 mt-4">
    <input type="hidden" id="sendButton" value="Send Message" />
    @* <button class="btn btn-primary" id="ProductUploadedButton">Submit2 form</button> *@
    <input type="hidden" id="ProductUploadedButton" value="Send Message" />
    <!-- Account page navigation-->

    <hr class="mt-0 mb-4">
    <div class="row">
        <div class="col-xl-4" style="margin-bottom:25px">
            <!-- Profile picture card-->
            <div class="card mb-4 mb-xl-0">
                <div class="card-header">Profile Picture</div>
                <div class="card-body text-center">
                    <form action="/Home/ProfilePictureUpdateUpdate" method="post" enctype="multipart/form-data">
                        <img class="img-account-profile rounded-circle mb-2" src="@Model.UserInfo.ProfileImagePath" alt="">
                        <!-- Profile picture help block-->
                        <!-- Profile picture upload button-->
                        @if (!visitor)
                        {
                            <div class="form-group">

                                <label for="fileInput">Select Image:</label>
                                <input type="file" name="fileInput" accept="image/*" onchange="previewImages(event)" />

                                <div class="image-preview-container" id="imagePreviewContainer">
                                    <!-- Image previews will be dynamically added here -->
                                </div>
                            </div>
                            <button class="btn btn-primary" type="submit">Upload new image</button>
                        }

                    </form>
                    <!-- Profile picture image-->

                </div>
            </div>
        </div>
        <div class="col-xl-4">
            @if (!visitor)
            {
                <!-- Account details card-->
                <div class="card mb-4">
                    <div class="card-header">Account Details</div>
                    <div class="card-body">
                        <form method="post" action="/Home/ProfileUpdate">
                            <!-- Form Group (username)-->
                            <div class="mb-3">
                                <label class="small mb-1" for="inputUsername">Username </label>
                                <input class="form-control" id="inputUsername" name="Name" type="text" placeholder="Enter your username" value="@Model.UserInfo.Name">
                            </div>
                            <!-- Form Row-->
                            <div class="row gx-3 mb-3">
                                <!-- Form Group (first name)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputFirstName">Password</label>
                                    <input class="form-control" name="Password" id="inputFirstName" type="text" placeholder="New password" value="">
                                </div>
                                <!-- Form Group (last name)-->
                                <div class="col-md-6">
                                    <label class="small mb-1" for="inputLastName">Password again</label>
                                    <input class="form-control" name="Password2" id="inputLastName" type="text" placeholder="Repeat new password" value="">
                                </div>
                            </div>

                            <button class="btn btn-primary" type="submit">Save changes</button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="card mb-4">
                    <div class="card-header">Account Details</div>
                    <div class="card-body">
                        <!-- Form Group (username)-->
                        <div class="mb-3">
                            <h4>Username : @Model.UserInfo.Name</h4>
                            <h4>Type  : @Model.UserInfo.TypeOfUser</h4>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-xl-4">
            <!-- Account details card-->
            <div class="card mb-4">
                <div class="card-header">Rating</div>
                <div class="card-body">
                    <form method="post" action="/Home/ProfileRatingUpdate">
                        <!-- Form Group (username)-->
                        @if (visitor)
                        {
                            <input type="hidden" name="userIdDirected" value="@ViewData["VisitorId"]" />
                        }
                        <div class="ratings">
                            <h3>Average rating: </h3>
                            <div class="rating-stars">
                                @if (@Model.UserInfo.Voters == 0)
                                {
                                    <!-- Loop through to generate stars based on average rating -->
                                    @for (int i = 5; i < 5; i++)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    <!-- Show remaining empty stars -->
                                    @for (int i = 5; i < 5; i++)
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }
                                else
                                {
                                    <!-- Loop through to generate stars based on average rating -->
                                    @for (int i = 0; i < Convert.ToInt32(@Model.UserInfo.Rating / @Model.UserInfo.Voters); i++)
                                    {
                                        <i class="fas fa-star text-warning"></i>
                                    }
                                    <!-- Show remaining empty stars -->
                                    @for (int i = Convert.ToInt32(@Model.UserInfo.Rating / @Model.UserInfo.Voters); i < 5; i++)
                                    {
                                        <i class="far fa-star text-warning"></i>
                                    }
                                }


                            </div>
                            <div>
                                @{
                                    var average = @Model.UserInfo.Rating / @Model.UserInfo.Voters;
                                    average = Math.Round(average, 1);
                                }
                                <a>Rating : @Convert.ToString(average)</a>

                            </div>
                            <a>Total voters : @Model.UserInfo.Voters</a>
                        </div>
                        <div class="ratings">
                            <h3>Rate </h3>
                            <div class="rating">
                                <input type="radio" id="star5" name="rating" value="5" /><label for="star5"></label>
                                <input type="radio" id="star4" name="rating" value="4" /><label for="star4"></label>
                                <input type="radio" id="star3" name="rating" value="3" /><label for="star3"></label>
                                <input type="radio" id="star2" name="rating" value="2" /><label for="star2"></label>
                                <input type="radio" id="star1" name="rating" value="1" /><label for="star1"></label>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="submit">Save changes</button>

                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-12">
        <!-- Products card -->
        @if (ViewData["typeOfUser"].Equals("Client") || visitor)
        {
            <div class="card mb-4">
                <div class="card-header">Products</div>
                <div class="card-body d-flex flex-nowrap justify-content-start align-items-center overflow-auto" style="overflow-x: auto; max-width: calc(100vw - 30px);">
                    @if (Model.productWithByteImages != null)
                    {
                        @* <form method="get" id="myForm" action="Home/Product"> *@

                        @foreach (var productWithByteImages in Model.productWithByteImages.Take(9))
                        {
                            <input type="hidden" name="ProductId" value="@productWithByteImages.Products.Id" />
                            <div class="card mb-3 mr-3" style="width: 12rem;">
                                <div class="card-body text-center">
                                    <h5 class="card-title mb-0">@productWithByteImages.Products.Name</h5> <!-- Added mb-0 class to remove bottom margin -->
                                </div>
                                @if (productWithByteImages.ImagePaths.Any())
                                {
                                    <img src="@productWithByteImages.ImagePaths.First()" class="card-img-top" onclick="redirectToProduct(@productWithByteImages.Products.Id)" onmouseover="changeCursor()" onmouseout="restoreCursor()" alt="Product Image" style="width: 100%;">
                                }
                                else
                                {
                                    <img src="https://www.viewhotels.jp/ryogoku/wp-content/uploads/sites/9/2020/03/test-img.jpg" class="card-img-top" alt="Default Image" style="width: 100%;">
                                }
                            </div>
                        }
                        @* </form> *@
                    }
                    else
                    {
                        <p>No products found.</p>
                    }
                </div>
            </div>
        }
        else
        {

        }
    </div>
    <script>
        function submitForm() {
            document.getElementById("myForm").submit();
        }
        function redirectToProduct(productId) {
            window.location.href = '/Home/Product?id=' + productId;
        }
    </script>

    <script>
        function changeCursor() {
            document.body.style.cursor = "pointer";
        }

        function restoreCursor() {
            document.body.style.cursor = "auto";
        }
    </script>

    <style>
        body {
            background-color: #f2f6fc;
            color: #69707a;
        }

        .img-account-profile {
            height: 10rem;
        }

        .rounded-circle {
            border-radius: 50% !important;
        }

        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
        }

            .card .card-header {
                font-weight: 500;
            }

        .card-header:first-child {
            border-radius: 0.35rem 0.35rem 0 0;
        }

        .card-header {
            padding: 1rem 1.35rem;
            margin-bottom: 0;
            background-color: rgba(33, 40, 50, 0.03);
            border-bottom: 1px solid rgba(33, 40, 50, 0.125);
        }

        .form-control, .dataTable-input {
            display: block;
            width: 100%;
            padding: 0.875rem 1.125rem;
            font-size: 0.875rem;
            font-weight: 400;
            line-height: 1;
            color: #69707a;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #c5ccd6;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            border-radius: 0.35rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .nav-borders .nav-link.active {
            color: #0061f2;
            border-bottom-color: #0061f2;
        }

        .nav-borders .nav-link {
            color: #69707a;
            border-bottom-width: 0.125rem;
            border-bottom-style: solid;
            border-bottom-color: transparent;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
            padding-left: 0;
            padding-right: 0;
            margin-left: 1rem;
            margin-right: 1rem;
        }

        .rating {
            float: left;
            height: 46px;
            padding: 0 10px;
        }

            .rating:not(:checked) > input {
                position: absolute;
                top: -9999px;
            }

            .rating:not(:checked) > label {
                float: right;
                width: 1em;
                overflow: hidden;
                white-space: nowrap;
                cursor: pointer;
                font-size: 30px;
                color: #ccc;
            }

                .rating:not(:checked) > label:before {
                    content: '★ ';
                }

            .rating > input:checked ~ label {
                color: #ffc700;
            }

            .rating:not(:checked) > label:hover,
            .rating:not(:checked) > label:hover ~ label {
                color: #deb217;
            }

            .rating > input:checked + label:hover,
            .rating > input:checked + label:hover ~ label,
            .rating > input:checked ~ label:hover,
            .rating > input:checked ~ label:hover ~ label,
            .rating > label:hover ~ input:checked ~ label {
                color: #c59b08;
            }

    </style>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/chat/chat.js"></script>
