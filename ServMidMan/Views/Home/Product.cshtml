@using ServMidMan.Helper

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Details</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap Datepicker CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet">
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    @*     <script src="~/lib/microsoft/signalr/dist/browser/chat/chat.js"></script> *@
    <script src="~/lib/microsoft/signalr/dist/browser/chat/ProductUploaderNotifier.js"></script>
    <!-- Custom styles -->
    <style>
        body {
            background-color: #f8f9fa;
            color: #333;
        }

        .product-card {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .product-images img {
            max-width: 100%; /* Set maximum width to 100% of its container */
            max-height: 400px; /* Set maximum height to 400 pixels */
            margin-bottom: 20px;
        }

        .ratings {
            margin-top: 20px;
        }

        .rating-stars {
            font-size: 24px;
        }
        /* Style for the modal */
        .modal-dialog {
            max-width: 800px;
            margin: auto; /* Center the modal horizontally */
            margin-top: calc(50vh - 230px); /* Center the modal vertically */
        }

        .modal-content img {
            width: 100%;
            height: auto;
        }

        .image-preview-container img {
            width:70px;
        }
        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

        .additional-images2 img {
            width:50px;
        }
    </style>


</head>
<body>
    <input type="hidden" id="sendButton" value="Send Message" />
    @* <button class="btn btn-primary" id="ProductUploadedButton">Submit2 form</button> *@
    <input type="hidden" id="ProductUploadedButton" value="Send Message" />
    @if (ViewBag.Error == null)
    {
        <div class="container-fluid">
            <div class="row justify-content-center">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">

                                <div class="col-md-6">
                                    <div class="product-images">
                                        <!-- Placeholder for product images -->
                                        @if (Model.ImagePaths.Count > 0)
                                        {
                                            <div class="product-images">
                                                <img src="@Model.ImagePaths[0]" alt="Product Image" onclick="showImage(this)" onmouseover="changeCursor()" onmouseout="restoreCursor()" style="border: 2px solid black; margin: 5px;" data-toggle="modal" data-target="#imageModal">
                                            </div>
                                            @if (Model.ImagePaths.Count > 1)
                                            {
                                                <div class="additional-images">
                                                    @for (int i = 1; i < Model.ImagePaths.Count; i++)
                                                    {
                                                        <img src="@Model.ImagePaths[i]" width="100" alt="Additional Image" onclick="showImage(this)" onmouseover="changeCursor()" onmouseout="restoreCursor()" data-toggle="modal" data-target="#imageModal" style="border: 2px solid black; margin: 5px;">
                                                    }
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <img src="https://www.viewhotels.jp/ryogoku/wp-content/uploads/sites/9/2020/03/test-img.jpg" alt="Product Image" onclick="showImage(this)" data-toggle="modal" data-target="#imageModal">
                                        }
                                    </div>

                                    <div class="image-indicators">
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            <span class="image-indicator" onclick="showImageAtIndex(@i)"></span>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-6">

                                    <h2 class="card-title">@Model.Products.Name</h2>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p><strong>Leirás:</strong> @Model.Products.Description</p>
                                            <p><strong>Kategória:</strong> @Model.Products.Category</p>
                                            <p><strong>Ár:</strong> @Model.Products.Price€</p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><strong>Hely:</strong> @Model.Products.Location</p>
                                            <p><strong>Hirdatés létrehozva:</strong> @Model.Products.CreatedDate</p>
                                        </div>
                                    </div>
                                    <div class="text-center mt-4">
                                        @{
                                            var myUserType = ViewData["typeOfUser"];
                                        }
                                        @if (myUserType.Equals("Servicer"))
                                        {
                                            var a = 5;

                                            <button class="btn btn-primary mr-2" onclick="toggleAdditionalFields()">Send request</button>
                                        }
                                        <form method="post" action="/Chat/Index" style="display: inline;">
                                            <input type="hidden" name="Id" value="@Model.Products.UserId" />
                                            @{
                                                var clientId = Convert.ToInt32(ViewData["ClientId"]);
                                                if (clientId != @Model.Products.UserId)
                                                {
                                                    <button type="submit" class="btn btn-success mr-2">Contact</button>
                                                }
                                            }

                                        </form>
                                        @{
                                            var clientId2 = Convert.ToInt32(ViewData["ClientId"]);
                                            if (clientId2 == @Model.Products.UserId)
                                            {
                                                <button class="btn btn-dark mr-2" onclick="toggleEditMode()">Módositás</button>
                                                <form method="post" action="/Home/DeleteProduct" style="display: inline;">
                                                    <input type="hidden" name="Id" value="@Model.Products.Id" />
                                                    <button onclick="return confirmDelete()" class="btn btn-danger">Törlés</button>
                                                </form>
                                            }
                                            else
                                            {
                                                <form method="post" action="/Home/Profile" style="display: inline;">
                                                    <input type="hidden" name="userId" value="@Model.Products.UserId" />
                                                    <button type="submit" id="VisitProfile" class="btn btn-dark mr-2">Fiók látogatása</button>
                                                </form>
                                            }
                                        }
                                    </div>
                                    <form method="post" action="/Home/UpdateProduct" enctype="multipart/form-data">
                                        <input type="hidden" name="Id" value="@Model.Products.Id" />
                                        <div id="editFields" style="display: none; margin-top:10px">
                                            <div class="col-md-6 mb-3">
                                                <label for="editName">Név</label>
                                                <input type="text" class="form-control" name="Name" id="Name" value="@Model.Products.Name">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="editDescription">Leirás</label>
                                                <textarea class="form-control" id="Description" name="Description" rows="4">@Model.Products.Description</textarea>
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="validationDefault01">Kategória</label>
                                                <select class="form-control" id="CategoryRadio" name="Category" onchange="updateHiddenInput()">
                                                    <option selected>@Model.Products.Category</option>
                                                    <option value="Electronincs">Elektronika</option>
                                                    <option value="Mobile">Mobil</option>
                                                    <option value="PC">PC</option>
                                                    <option value="Notebook">Laptop</option>
                                                    <option value="Camera">Kamera</option>
                                                    <option value="Car">Auto</option>
                                                    <option value="Motorcycle">Motor</option>
                                                    <option value="Bicycle">Bicikli</option>
                                                    <option value="Other">Más</option>
                                                </select>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="editPrice">Ár</label>
                                                <input type="text" class="form-control" id="Price" name="Price" oninput="validateNumber(this)" value="@Model.Products.Price">
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="editLocation">Hely</label>
                                                <input type="text" class="form-control" id="Location" name="Location" value="@Model.Products.Location">
                                            </div>
                                            <div class="additional-images2" id="additional-images2">
                                                <div class="form-group">

                                                    <label for="fileInput">További kép feltötlése:</label>
                                                    <input type="file" name="fileInput" id="fileInput" accept="image/*" multiple onchange="validateFileCount(event)" />

                                                    <div class="image-preview-container" id="imagePreviewContainer">
                                                        @for (int i = 0; i < Model.ImagePaths.Count; i++)
                                                        {
                                                            <div class="image-container">
                                                                <img src="@Model.ImagePaths[i]" width="100" alt="Additional Image" onclick="showImage(this)" onmouseover="changeCursor()" onmouseout="restoreCursor()" data-toggle="modal" data-target="#imageModal" style="border: 2px solid black; margin: 5px;">
                                                                <button class="btn btn-danger delete-image-btn" onclick="deleteImage(this,'@Model.ImagePaths[i]')">X</button>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="text-center">
                                                <button class="btn btn-primary" onclick="saveChanges()">Módositások mentése</button>
                                                <button class="btn btn-secondary" onclick="toggleEditMode()">Visszavonás</button>
                                            </div>
                                        </div>
                                    </form>
                                    <form method="post" action="/Service/SendRequest">
                                        <input type="hidden" name="Id" value="@Model.Products.Id" />
                                        <div id="additionalFields" style="display: none; margin-top:10px">
                                            <!-- Additional fields to be displayed when the "Send request" button is clicked -->
                                            <div class="col-md-6 mb-3">
                                                <label for="validationDefault01">Leirás</label>
                                                <textarea name="Description" class="form-control" id="validationDefault03" placeholder="Description" rows="4"></textarea>
                                                <label>Choose date :</label>
                                                <input style="margin-top:10px" name="dateTimeToFinish" type="date" min="today" />
                                            </div>
                                            <div class="input-group col-md-6 mb-3">
                                                <input type="text" name="Price" oninput="validateNumber(this)" class="form-control" id="validationDefault03" placeholder="Price" required>
                                                <div class="input-group-append">
                                                    <span class="input-group-text">€</span>
                                                </div>

                                            </div>

                                            <!-- Save button -->
                                            <div class="text-center">
                                                <button type="submit" class="btn btn-primary">Mentés</button>
                                                <button class="btn btn-secondary" onclick="toggleAdditionalFields()">Visszavonás</button>
                                            </div>

                                        </div>
                                    

                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            <strong>Hibaüzenet!:</strong> @ViewBag.Error
        </div>
    }

    <div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <img src="" id="modalImage" class="img-fluid" alt="Modal Image">
                </div>
            </div>
        </div>
    </div>

    <script>
        function showImage(element) {
            var imageUrl = element.src;
            document.getElementById('modalImage').src = imageUrl;
        }

        function deleteImage(button, imageName) {
 // Get the parent container of the image and delete button
            var imageContainer = button.parentNode;
            // Remove the image container from the DOM
            imageContainer.parentNode.removeChild(imageContainer);
            $.ajax({
                url: '/Home/DeleteProductImage', // Adjust URL as needed
                type: 'POST',
                data: { imageId: imageName },
                success: function (response) {
                    // var suggestionsHtml = '';
                    // $.each(response, function (index, value) {
                    //     suggestionsHtml += '<div class="suggestion">' + value + '</div>';
                    // });
                    // $('#suggestionsContainer').html(suggestionsHtml);
                    // $('#suggestionsContainer').css('display', 'block');

                    // // Handle click event on suggestions
                    // $('.suggestion').click(function () {
                    //     var selectedCity = $(this).text();
                    //     $('#inputField').val(selectedCity);
                    //     $('#suggestionsContainer').empty().hide();
                    // });
                }
            });
        }

        function toggleAdditionalFields() {
            var additionalFields = document.getElementById('additionalFields');
            var editFields = document.getElementById('editFields');

            // Hide edit fields if they are visible
            if (editFields.style.display !== 'none') {
                toggleEditMode();
            }

            if (additionalFields.style.display === 'none') {
                additionalFields.style.display = 'block';
            } else {
                additionalFields.style.display = 'none';
            }
        }

        function toggleEditMode() {
            var additionalFields = document.getElementById('additionalFields');
            var editFields = document.getElementById('editFields');

            // Hide additional fields if they are visible
            if (additionalFields.style.display !== 'none') {
                toggleAdditionalFields();
            }

            if (editFields.style.display === 'none') {
                editFields.style.display = 'block';
            } else {
                editFields.style.display = 'none';
            }
        }

        function validateNumber(input) {
            input.value = input.value.replace(/[^0-9.]/g, ''); // Remove all characters except digits and dots
            input.value = input.value.replace(/^(\d*\.\d*).*$/, '$1'); // Allow only one dot
        }

        function saveChanges() {
            var name = document.getElementById('Name').value;
            var description = document.getElementById('Description').value;
            var category = document.getElementById('CategoryRadio').value;
            var price = document.getElementById('Price').value;
            var location = document.getElementById('Location').value;


        }
        function confirmDelete() {
            if (confirm("Biztos törölni szeretnéd a productot?")) {
                // If the user confirms, submit the form
                document.forms["deleteForm"].submit();
            } else {
                // If the user cancels, return false to prevent the form submission
                return false;
            }
        }
        function previewImages(event) {
            var input = event.target;
            var imageContainer = document.querySelector('.image-preview-container');

            // Clear existing images
            imageContainer.innerHTML = '';

            // Iterate over selected files
            for (var i = 0; i < input.files.length; i++) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    // Create image element
                    var imgElement = document.createElement('img');
                    imgElement.classList.add('image-preview');
                    imgElement.src = e.target.result;
                    imgElement.alt = 'Additional Image'; // Alt attribute
                    imgElement.onclick = function () { showImage(this); }; // Click event
                    imgElement.onmouseover = function () { changeCursor(); }; // Mouseover event
                    imgElement.onmouseout = function () { restoreCursor(); }; // Mouseout event
                    imgElement.setAttribute('data-toggle', 'modal'); // Data toggle attribute
                    imgElement.setAttribute('data-target', '#imageModal'); // Data target attribute
                    imgElement.style.border = '2px solid black'; // Style attribute
                    imgElement.style.margin = '5px'; // Style attribute

                    // Append image to image-container
                    imageContainer.appendChild(imgElement);
                };
                // Read file as data URL
                reader.readAsDataURL(input.files[i]);
            }
        }

        function validateFileCount(event) {
            var input = event.target;
            var maxFiles = 10;

            if (input.files && input.files.length > maxFiles) {
                alert("Maximum 10 images allowed.");
                // Reset the file input
                input.value = '';
            } else {
                // Process the files or update preview as needed
                previewImages(event);
            }
        }
    </script>

    <script>
        function changeCursor() {
            document.body.style.cursor = "pointer";
        }

        function restoreCursor() {
            document.body.style.cursor = "auto";
        }
    </script>
</body>
</html>
